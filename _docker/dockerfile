FROM ocaml/opam:ubuntu-ocaml-4.14
RUN sudo apt update --fix-missing
RUN sudo apt install -y libgmp-dev pkg-config libzmq3-dev zlib1g-dev

RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/home/opam/.local/bin:/home/opam/.local/share/uv/tools/jupyterlab/bin:$PATH"

RUN uv tool install jupyterlab
RUN opam update
RUN opam install jupyter merlin

# Register the OCaml kernel with Jupyter
RUN grep topfind ~/.ocamlinit || echo '#use "topfind";;' >> ~/.ocamlinit  # For using '#require' directive
RUN grep Topfind.log ~/.ocamlinit || echo 'Topfind.log:=ignore;;' >> ~/.ocamlinit  # Suppress logging of topfind (recommended but not necessary)
# Enable Merlin in OCaml REPL
RUN grep merlin ~/.ocamlinit || echo '#require "merlin";;' >> ~/.ocamlinit
RUN eval $(opam env) && ocaml-jupyter-opam-genspec
# Register the OCaml kernel with Jupyter
RUN eval $(opam env) && jupyter kernelspec install --name ocaml-jupyter "$(opam var share)/jupyter" --user

# Install Jupyter extensions
RUN uv pip install RISE --python ~/.local/share/uv/tools/jupyterlab/bin/python  # For presentations
RUN uv pip install jupyterlab-rise --python ~/.local/share/uv/tools/jupyterlab/bin/python  # JupyterLab extension for RISE
RUN uv pip install jupyterlab-mathjax3 --python ~/.local/share/uv/tools/jupyterlab/bin/python  # Better LaTeX support

# Install SWI-Prolog
RUN sudo apt install -y swi-prolog
RUN uv pip install git+https://github.com/kayceesrk/jupyter-swi-prolog.git --python ~/.local/share/uv/tools/jupyterlab/bin/python
RUN mkdir -p ~/.local/share/jupyter/kernels/jswipl
RUN curl -o ~/.local/share/jupyter/kernels/jswipl/kernel.json https://raw.githubusercontent.com/targodan/jupyter-swi-prolog/master/kernel.json

# Configure RISE presentation settings
RUN mkdir -p ~/.jupyter && \
    echo 'c = get_config()' > ~/.jupyter/jupyter_notebook_config.py && \
    echo 'c.Reveal.scroll = True' >> ~/.jupyter/jupyter_notebook_config.py && \
    echo 'c.Reveal.theme = "simple"' >> ~/.jupyter/jupyter_notebook_config.py && \
    echo 'c.Reveal.transition = "none"' >> ~/.jupyter/jupyter_notebook_config.py && \
    echo 'c.Reveal.start_slideshow_at = "selected"' >> ~/.jupyter/jupyter_notebook_config.py

# Create custom JavaScript to handle Shift+Enter behavior in RISE
RUN mkdir -p ~/.jupyter/custom && \
    echo 'define(["require"], function(require) {' > ~/.jupyter/custom/rise.js && \
    echo '  return {' >> ~/.jupyter/custom/rise.js && \
    echo '    load_ipython_extension: function() {' >> ~/.jupyter/custom/rise.js && \
    echo '      require(["base/js/events"], function(events) {' >> ~/.jupyter/custom/rise.js && \
    echo '        events.on("kernel_ready.Kernel", function() {' >> ~/.jupyter/custom/rise.js && \
    echo '          if (window.Reveal) {' >> ~/.jupyter/custom/rise.js && \
    echo '            IPython.keyboard_manager.command_shortcuts.remove_shortcut("shift-enter");' >> ~/.jupyter/custom/rise.js && \
    echo '            IPython.keyboard_manager.edit_shortcuts.remove_shortcut("shift-enter");' >> ~/.jupyter/custom/rise.js && \
    echo '            IPython.keyboard_manager.edit_shortcuts.add_shortcut("shift-enter", {' >> ~/.jupyter/custom/rise.js && \
    echo '              help: "run cell, stay on slide",' >> ~/.jupyter/custom/rise.js && \
    echo '              help_index: "zz",' >> ~/.jupyter/custom/rise.js && \
    echo '              handler: function() {' >> ~/.jupyter/custom/rise.js && \
    echo '                IPython.notebook.execute_cell();' >> ~/.jupyter/custom/rise.js && \
    echo '                return false;' >> ~/.jupyter/custom/rise.js && \
    echo '              }' >> ~/.jupyter/custom/rise.js && \
    echo '            });' >> ~/.jupyter/custom/rise.js && \
    echo '          }' >> ~/.jupyter/custom/rise.js && \
    echo '        });' >> ~/.jupyter/custom/rise.js && \
    echo '      });' >> ~/.jupyter/custom/rise.js && \
    echo '    }' >> ~/.jupyter/custom/rise.js && \
    echo '  };' >> ~/.jupyter/custom/rise.js && \
    echo '});' >> ~/.jupyter/custom/rise.js

WORKDIR /lectures